{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Footer.jsx","actions/userActions.js","components/SearchBox.jsx","components/Header.jsx","components/Rating.jsx","components/Product.jsx","components/Message.jsx","components/Loader.jsx","actions/productActions.js","components/Paginate.jsx","components/Meta.jsx","components/ProductCarousel.jsx","screens/HomeScreen.jsx","screens/ProductScreen.jsx","actions/cartActions.js","screens/CartScreen.jsx","components/FormContainer.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","screens/ProfileScreen.jsx","actions/orderActions.js","components/CheckoutSteps.jsx","screens/ShippingScreen.jsx","screens/PaymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderScreen.jsx","screens/UserListScreen.jsx","screens/UserEditScreen.jsx","screens/ProductListScreen.jsx","screens/ProductEditScreen.jsx","screens/OrderListScreen.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productCreate","success","productUpdate","productDelete","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","props","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Rating","text","color","style","defaultProps","propTypes","PropTypes","number","string","isRequired","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","listProducts","pageNumber","listProductDetails","Paginate","Pagination","Array","keys","active","Meta","description","keywords","Helmet","content","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8c7fcc36.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productDeleteReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\n// initial cart and user info will be loaded from local storage if they exist\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      // default return initial state\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      // default return initial state\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      // current item to be added\r\n      const item = action.payload\r\n      // check if item already exist in cart, .product is the ID\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            // replace the existing item obj with the newly added item obj\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload }\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload }\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_PAY_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ORDER_PAY_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return { loading: false, orders: action.payload }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_LIST_SUCCESS:\r\n      return { loading: false, orders: action.payload }\r\n    case ORDER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ORDER_DELIVER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          {/* py-3: padding in Y axis */}\r\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n    // setup headers for post request\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    // send post request with credentials and config\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n    // if successful, save data to state.userLogin.userInfo\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  // clear localStorage\r\n  localStorage.removeItem('userInfo')\r\n  // USER_LOGOUT will set state.userLogin to {}\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n    // setup headers for post request\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    // send post request with credentials and config\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n    // if successful, save data to state.userRegister.userInfo\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n    // log user in immediately after register\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\n// if we only get profile, pass in string \"profile\" as \"id\" arg\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header from token in state\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // \"id\" can be \":id\" or string \"profile\"\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n    // if successful, dispatch action to reducer\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\n// take in entire user object\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header from token in state\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // PUT request, pass in user object\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n    // if successful, save profile to state.userDetauls.user\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: USER_LIST_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header from token in state\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // PUT request, pass in user object\r\n    const { data } = await axios.get(`/api/users`, config)\r\n    // if successful, save data to state.userList.users\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header from token in state\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // DELETE request, pass in user ID\r\n    await axios.delete(`/api/users/${id}`, config)\r\n    // if successful, set state { success: true }\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header from token in state\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // UPDATE request, pass in user object\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n    // if successful, set store { success: true }\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    })\r\n    // save user details to state.userDetails.user\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n// SearchBox is embeded in <Header />\r\n// No direct access to routeProps.history, pass routeProps using <Route render={} /> in <Header />\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\nimport { Route } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={(props) => <SearchBox {...props} />} />\r\n            {/* ml-auto: margin-left auto */}\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign in\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n            // color='#f8e825' // this is defined in Rating.defaultProps\r\n          />\r\n        </Card.Text>\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\n// type check errors will appear in console\r\nRating.propTypes = {\r\n  value: PropTypes.number,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: 100,\r\n        height: 100,\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n    // backend url \"http://127.0.0.1:5000\" is added as proxy in frontend package.json\r\n    // proxy will fake \"http://127.0.0.1:5000\" as \"http://127.0.0.1:3000\"\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        // check if both generic and custom message exist\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        // check if both generic and custom message exist\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // DELETE product from API\r\n    await axios.delete(`/api/products/${id}`, config)\r\n    // if successful, update state { success: true }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // POST product from API, sending EMPTY object because backend will create SAMPLE data\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n    // if successful, store data in state.productCreate.product\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // POST product from API, sending EMPTY object because backend will create SAMPLE data\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n    // if successful, store data in state.productCreate.product\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // POST product from API, sending EMPTY object because backend will create SAMPLE data\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n    // if successful, store data in state.productCreate.product\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword }) => {\r\n  // pages: total number of pages\r\n  // page: current page number\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              isAdmin\r\n                ? `/admin/productlist/${x + 1}`\r\n                : keyword\r\n                ? `/search/${keyword}/page/${x + 1}`\r\n                : `/page/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To Proshop',\r\n  keywords: 'electronics, buy electronics, cheap electronics',\r\n  description: 'We sell the best products for cheap',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  // get keyword from url '/search/:keyword'\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  // with \"useDispatch\", we no longer need \"connect\" wrapper to dispatch actions\r\n  const dispatch = useDispatch()\r\n\r\n  // with \"useSelector\", we can pick a slice of store without \"mapStateToProps\"\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    // CANNOT add \"async\" directly to useEffect arg func\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber]) // add \"dispatch\" as dependency\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        // only render products if there is NO error in store\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              // on small screen will take 12 columns\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n// \"match\" prop is from react-router-dom with /:id params\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { product, loading, error } = productDetails\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    // if review submitted successfully, reset local state and redux store\r\n    if (successProductReview) {\r\n      alert('Review Submitted!')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    // use \"history\" to redirect page\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              {/* \"fluid\" will stop image from going out of container */}\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  ></Rating>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {\r\n                              // make list: 1, 2, 3 ... stock total number\r\n                              [...Array(product.countInStock).keys()].map(\r\n                                (x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                )\r\n                              )\r\n                            }\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n// \"getState()\" will return the entire state tree of redux store\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n  // save cart items to localstorage after state update\r\n  // JSON.stringify because local storage can only take in strings\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n// pass in form data as arg\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n// pass in form data as arg\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n// \"location\" is used to get querry string parameters (?qty=3)\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  // console.log(location.search) // ?qty=3\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // get cart items from store\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty]) // useEffect will re-run if any of dependencies changes\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {\r\n                        // make list: 1, 2, 3 ... stock total number\r\n                        [...Array(item.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))\r\n                      }\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // get userInfo and other properties from store\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  // console.log(location.search) // ?redirect=asdf\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    // check if logged in\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect]) // will redirect if userInfo changes\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null) // validation message\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // get userInfo and other properties from store\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  // console.log(location.search) // ?redirect=asdf\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    // check if logged in\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect]) // will redirect if userInfo changes\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // check password\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      // dispatch register\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null) // validation message\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // get userDetails properties from store\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  // get userInfo from store\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  // get success property from state.userUpdateProfile, to be shown in Message\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  // get userDetails properties from store\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    // check if logged in\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      // check for user details\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        // send get request to \"/api/users/profile\"\r\n        dispatch(getUserDetails('profile'))\r\n        // send get request to \"/api/orders/myorders\"\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        // if we have the user\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // check password\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      // pass in the updated user object\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // POST request, pass in order object\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n    // if successful, dispatch action to reducer\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // GET request, auth needed\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n    // if successful, dispatch action to reducer\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: ORDER_PAY_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // PUT request, pass in paymentResult from PayPal\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n    // if successful, dispatch action to reducer\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // GET orders from API\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n    // if successful, dispatch action to reducer\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: ORDER_LIST_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // GET orders from API\r\n    const { data } = await axios.get('/api/orders', config)\r\n    // if successful, store data to state.orderList.orders\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    // dispatch action to reducer to set loading=true\r\n    dispatch({ type: ORDER_DELIVER_REQUEST })\r\n\r\n    // get state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // setup auth header with bearer token from store\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    // PUT request, no need to pass any data\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n    // if successful, update {success: true}\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message // custom message from api\r\n          : error.response, // generic message\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// Add 4 nav links at the top of screens\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  // step1, step2, step3, step4 are props passed in from various screens (<CheckoutSteps step1 step2 />)\r\n  return (\r\n    // \"mb-4\" is margin-bottom: 4em\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  // pull out state.cart.shippingAddress object from store\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  // set initial state with the above \"shippingAddress\" object\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // on submit, dispatch whole address to store (and persist to DB?)\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    // once success, move to payment page\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  // pull out state.cart.shippingAddress object from store\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  // set \"PayPal\" as default payment method\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // on submit, dispatch payment method to store (and persist to DB?)\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    // once success, move to Place Order page\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Paypal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  // once order is placed, get order object from state\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  // after order placed successfully, redirect to order page\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]) // don't add \"order\" here because it will be null before successful submition\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        // prepare order object\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  // Calculate Prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10)\r\n  cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice))\r\n  cart.totalPrice = addDecimals(\r\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  // get order ID from url (/orders/:id)\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // get order details from state\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails // initial state: { loading: true }\r\n\r\n  // get userInfor from state\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  // get payment status from store\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay // initial state: { loading: true }\r\n\r\n  // get delivery status from store\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    const addPayPalScript = async () => {\r\n      // PayPal client ID is stored in backend env, need to get it from API\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      // Customize the PayPal JavaScript SDK Script\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      // once the script is loaded, there will be \"window.paypal\" object, then update local state\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      // append the <script> to <body>\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    // if payment/deliver is successful, re-fetch order details\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      // RESET the cycle after payment\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      // RESET the cycle after delivery\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      // re-fetch the most recent order\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      // check if PayPal script is loaded\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver, userInfo, history])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  // initial state: { loading: true }, always show loader when no order fetched\r\n  if (loading) return <Loader />\r\n\r\n  if (error) return <Message variant='danger'>{error}</Message>\r\n\r\n  return (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    // protect this component\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, userInfo, history, successDelete]) // successDelete will force useEffect to reload once deleted\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) dispatch(deleteUser(id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // get user details from state.userDetails.user\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  // get update status from state.userUpdate\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    // if updated successfully, reset state.userUpdate and redirect to userlist\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, user, userId, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Paginate from '../components/Paginate'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    // RESET immediately\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n    // protect this component\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    // Redirect to ProductEditScreen if we just added a new product\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      // listProducts() don't need a keyword for admin, so pass in empty string\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    history,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]) // successDelete will force useEffect to reload once deleted\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // get product details from state.productDetails.product\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  // get product update status from state.productUpdate\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n    // product: updatedProduct,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    // if we just updated a product, reset state.productUpdate and redirect to productlist\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      // if there is no product details, fetch from API\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        // populate form fields with fetched data\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, product, productId, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    // \"e.target.files\" is an array of files\r\n    const file = e.target.files[0]\r\n    // FormData is pure js\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true) // initiate spinner\r\n\r\n    try {\r\n      // IMPORTANT, set content type for files\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      // API returned data: req.file.path\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      // // convert \"\\\" to \"/\"\r\n      // let imagePath\r\n      // if (/\\\\/.test(data)) {\r\n      //   imagePath = data.replace('\\\\', '/')\r\n      // }\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Count In Stock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    // protect this component\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, userInfo, history])\r\n\r\n  // DO NOT DELETE ORDERS, DO NOT EDIT ORDERS\r\n  // no edit and delete handlers required\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PRICE</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      {/* py-3: padding on Y axis */}\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          {/* :id? means optional */}\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store.js'\nimport './index.css'\nimport './bootstrap.min.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}